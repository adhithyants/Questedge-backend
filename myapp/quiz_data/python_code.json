{
    "quiz": {
        "title": "Python Programming Quiz",
        "questions": [
            {
                "id": 1,
                "text": "What is the output of this code?\n```python\nprint(3 + 5 * 2)\n```",
                "correct_answer": "13",
                "explanation": "Multiplication has higher precedence than addition, so 5 * 2 = 10, then 3 + 10 = 13."
            },
            {
                "id": 2,
                "text": "Find the error in this code:\n```python\nmy_list = [1, 2, 3]\nmy_list[3] = 4\n```",
                "correct_answer": "IndexError",
                "explanation": "The list has indices 0 to 2, so accessing index 3 raises an IndexError."
            },
            {
                "id": 3,
                "text": "Complete this code to print 'Even' if x is even:\n```python\nx = 4\nif x % 2 == 0:\n    print('Even')\n```",
                "correct_answer": "Even",
                "explanation": "x % 2 == 0 checks if x is even, so for x = 4, it prints 'Even'."
            },
            {
                "id": 4,
                "text": "What is the output of this code?\n```python\ns = 'Python'\nprint(s[1:4])\n```",
                "correct_answer": "yth",
                "explanation": "Slicing from index 1 to 3 (exclusive) gives 'yth'."
            },
            {
                "id": 5,
                "text": "Find the error in this code:\n```python\nx = 5\nprint(X)\n```",
                "correct_answer": "NameError",
                "explanation": "Python is case-sensitive; 'X' is undefined, only 'x' is defined."
            },
            {
                "id": 6,
                "text": "Complete this function to return the square of a number:\n```python\ndef square(num):\n    return num * num\nprint(square(4))\n```",
                "correct_answer": "16",
                "explanation": "The function returns 4 * 4 = 16 for input num = 4."
            },
            {
                "id": 7,
                "text": "What is the output of this code?\n```python\nmy_list = [1, 2, 3]\nmy_list.append(4)\nprint(my_list)\n```",
                "correct_answer": "[1, 2, 3, 4]",
                "explanation": "append(4) adds 4 to the end of the list."
            },
            {
                "id": 8,
                "text": "Find the error in this code:\n```python\nfor i in range(3)\n    print(i)\n```",
                "correct_answer": "SyntaxError",
                "explanation": "The range(3) statement requires a colon (:) after it."
            },
            {
                "id": 9,
                "text": "Complete this code to concatenate two strings:\n```python\ns1 = 'Hello'\ns2 = 'World'\nprint(s1 + s2)\n```",
                "correct_answer": "HelloWorld",
                "explanation": "The '+' operator concatenates 'Hello' and 'World'."
            },
            {
                "id": 10,
                "text": "What is the output of this code?\n```python\nx = [1, 2, 3]\nprint(x[-1])\n```",
                "correct_answer": "3",
                "explanation": "Negative indexing accesses the last element with -1."
            },
            {
                "id": 11,
                "text": "Find the error in this code:\n```python\nmy_dict = {1: 'one', 2: 'two'}\nmy_dict[1] = 'ONE'\nprint(my_dict[3])\n```",
                "correct_answer": "KeyError",
                "explanation": "The key 3 does not exist in the dictionary."
            },
            {
                "id": 12,
                "text": "Complete this code to check if 5 is in the list:\n```python\nnums = [1, 3, 5, 7]\nif 5 in nums:\n    print('Found')\n```",
                "correct_answer": "Found",
                "explanation": "The 'in' operator confirms 5 is in the list, printing 'Found'."
            },
            {
                "id": 13,
                "text": "What is the output of this code?\n```python\nx = 10\nx += 3\nprint(x)\n```",
                "correct_answer": "13",
                "explanation": "x += 3 adds 3 to x, so 10 + 3 = 13."
            },
            {
                "id": 14,
                "text": "Find the error in this code:\n```python\nmy_tuple = (1, 2, 3)\nmy_tuple[0] = 4\n```",
                "correct_answer": "TypeError",
                "explanation": "Tuples are immutable, so assigning to an index raises a TypeError."
            },
            {
                "id": 15,
                "text": "Complete this function to return the maximum of two numbers:\n```python\ndef max_num(a, b):\n    return a if a > b else b\nprint(max_num(7, 3))\n```",
                "correct_answer": "7",
                "explanation": "The function returns 7 since 7 > 3."
            },
            {
                "id": 16,
                "text": "What is the output of this code?\n```python\ntry:\n    print(10 / 0)\nexcept ZeroDivisionError:\n    print('Error')\n```",
                "correct_answer": "Error",
                "explanation": "Division by zero raises a ZeroDivisionError, caught by the except block."
            },
            {
                "id": 17,
                "text": "Find the error in this code:\n```python\nx = int('abc')\n```",
                "correct_answer": "ValueError",
                "explanation": "The string 'abc' cannot be converted to an integer, raising a ValueError."
            },
            {
                "id": 18,
                "text": "Complete this function to count occurrences in a list:\n```python\ndef count_val(lst, val):\n    return lst.count(val)\nprint(count_val([1, 2, 2, 3], 2))\n```",
                "correct_answer": "2",
                "explanation": "The count() method returns 2, as 2 appears twice in the list."
            },
            {
                "id": 19,
                "text": "What is the output of this code?\n```python\nx = {1, 2, 2, 3}\nprint(len(x))\n```",
                "correct_answer": "3",
                "explanation": "Sets eliminate duplicates, so {1, 2, 2, 3} has length 3."
            },
            {
                "id": 20,
                "text": "Find the error in this code:\n```python\nmy_list = [1, 2, 3]\nmy_list.remove(4)\n```",
                "correct_answer": "ValueError",
                "explanation": "remove(4) raises a ValueError since 4 is not in the list."
            },
            {
                "id": 21,
                "text": "Complete this code to create a list of squares:\n```python\nsquares = [x**2 for x in range(4)]\nprint(squares)\n```",
                "correct_answer": "[0, 1, 4, 9]",
                "explanation": "The list comprehension computes squares of 0, 1, 2, 3."
            },
            {
                "id": 22,
                "text": "What is the output of this code?\n```python\ndef add(a, b=2):\n    return a + b\nprint(add(3))\n```",
                "correct_answer": "5",
                "explanation": "The default parameter b=2 is used, so 3 + 2 = 5."
            },
            {
                "id": 23,
                "text": "Find the error in this code:\n```python\nimport math\nprint(Math.sqrt(16))\n```",
                "correct_answer": "NameError",
                "explanation": "The module is 'math', not 'Math'; Python is case-sensitive."
            },
            {
                "id": 24,
                "text": "Complete this code to calculate the square root:\n```python\nimport math\nprint(math.sqrt(25))\n```",
                "correct_answer": "5.0",
                "explanation": "math.sqrt(25) returns the square root, 5.0."
            },
            {
                "id": 25,
                "text": "What is the output of this code?\n```python\nx = [1, 2, 3]\ny = x.copy()\ny[0] = 4\nprint(x)\n```",
                "correct_answer": "[1, 2, 3]",
                "explanation": "copy() creates a new list, so modifying y does not affect x."
            },
            {
                "id": 26,
                "text": "Find the error in this code:\n```python\nmy_dict = {'a': 1, 'b': 2}\nmy_dict['c']\n```",
                "correct_answer": "KeyError",
                "explanation": "The key 'c' does not exist in the dictionary."
            },
            {
                "id": 27,
                "text": "Complete this code to reverse a string:\n```python\ns = 'hello'\nprint(s[::-1])\n```",
                "correct_answer": "olleh",
                "explanation": "The slice [::-1] reverses the string."
            },
            {
                "id": 28,
                "text": "What is the output of this code?\n```python\nx = None\nprint(x)\n```",
                "correct_answer": "None",
                "explanation": "The variable x is None, printed as 'None'."
            },
            {
                "id": 29,
                "text": "Find the error in this code:\n```python\nx = [1, 2, 3]\nx[3]\n```",
                "correct_answer": "IndexError",
                "explanation": "Index 3 is out of range for a list with indices 0 to 2."
            },
            {
                "id": 30,
                "text": "Complete this code to sum a list:\n```python\nnums = [1, 2, 3, 4]\nprint(sum(nums))\n```",
                "correct_answer": "10",
                "explanation": "The sum() function adds all elements: 1 + 2 + 3 + 4 = 10."
            },
            {
                "id": 31,
                "text": "What is the output of this code?\n```python\nx = 'abc'\nprint(x.upper())\n```",
                "correct_answer": "ABC",
                "explanation": "The upper() method converts the string to uppercase."
            },
            {
                "id": 32,
                "text": "Find the error in this code:\n```python\nx = [1, 2, 3]\nx.pop(3)\n```",
                "correct_answer": "IndexError",
                "explanation": "pop(3) attempts to remove an element at index 3, which is out of range."
            },
            {
                "id": 33,
                "text": "Complete this code to create a list of even numbers:\n```python\nevens = [x for x in range(6) if x % 2 == 0]\nprint(evens)\n```",
                "correct_answer": "[0, 2, 4]",
                "explanation": "The list comprehension filters even numbers from 0 to 5."
            },
            {
                "id": 34,
                "text": "What is the output of this code?\n```python\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n-1)\nprint(factorial(3))\n```",
                "correct_answer": "6",
                "explanation": "factorial(3) computes 3 * 2 * 1 = 6."
            },
            {
                "id": 35,
                "text": "Find the error in this code:\n```python\ndef my_func():\n    return 'Hello'\nmy_func = 'World'\nmy_func()\n```",
                "correct_answer": "TypeError",
                "explanation": "Assigning 'World' to my_func overwrites the function, so my_func() raises a TypeError."
            },
            {
                "id": 36,
                "text": "Complete this code to find the length of a string:\n```python\ns = 'Python'\nprint(len(s))\n```",
                "correct_answer": "6",
                "explanation": "len('Python') returns 6, the number of characters in the string."
            },
            {
                "id": 37,
                "text": "What is the output of this code?\n```python\nx = [1, 2, 3]\nx.remove(2)\nprint(x)\n```",
                "correct_answer": "[1, 3]",
                "explanation": "remove(2) deletes the first occurrence of 2 from the list."
            },
            {
                "id": 38,
                "text": "Find the error in this code:\n```python\nx = '123'\nprint(x + 4)\n```",
                "correct_answer": "TypeError",
                "explanation": "You cannot concatenate a string with an integer."
            },
            {
                "id": 39,
                "text": "Complete this code to create a dictionary:\n```python\nd = {'a': 1, 'b': 2}\nprint(d['b'])\n```",
                "correct_answer": "2",
                "explanation": "Accessing the key 'b' returns its value, 2."
            },
            {
                "id": 40,
                "text": "What is the output of this code?\n```python\nx = lambda x: x + 2\nprint(x(5))\n```",
                "correct_answer": "7",
                "explanation": "The lambda function adds 2 to the input, so 5 + 2 = 7."
            }
        ]
    }
}