{
    "quiz": {
        "title": "Python Beginner to Intermediate Quiz",
        "questions": [
            {
                "id": 1,
                "text": "What is the output of the following code? \nprint(5 == 5)",
                "options": [
                    {"text": "None", "correct": false},
                    {"text": "True", "correct": true},
                    {"text": "False", "correct": false},
                    {"text": "5", "correct": false}
                ],
                "explanation": "The expression 5 == 5 evaluates to True because both sides of the comparison are equal."
            },
            {
                "id": 2,
                "text": "Which data type is used to store the value 3.14 in Python?",
                "options": [
                    {"text": "int", "correct": false},
                    {"text": "float", "correct": true},
                    {"text": "str", "correct": false},
                    {"text": "complex", "correct": false}
                ],
                "explanation": "The value 3.14 is a decimal number, which is represented by the float data type in Python."
            },
            {
                "id": 3,
                "text": "What is the output of the following code? \nx = 10 \nif x > 5: \n    print('Big') \nelse: \n    print('Small')",
                "options": [
                    {"text": "Big", "correct": true},
                    {"text": "Small", "correct": false},
                    {"text": "None", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "Since x is 10, which is greater than 5, the condition x > 5 is True, so 'Big' is printed."
            },
            {
                "id": 4,
                "text": "Which keyword is used to define a function in Python?",
                "options": [
                    {"text": "func", "correct": false},
                    {"text": "def", "correct": true},
                    {"text": "function", "correct": false},
                    {"text": "lambda", "correct": false}
                ],
                "explanation": "The 'def' keyword is used to define a function in Python, followed by the function name and parameters."
            },
            {
                "id": 5,
                "text": "What is the output of the following code? \nmy_list = [1, 2, 3] \nprint(my_list[1])",
                "options": [
                    {"text": "1", "correct": false},
                    {"text": "2", "correct": true},
                    {"text": "3", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "List indices in Python start at 0, so my_list[1] accesses the second element, which is 2."
            },
            {
                "id": 6,
                "text": "Which of the following is a mutable data type in Python?",
                "options": [
                    {"text": "str", "correct": false},
                    {"text": "tuple", "correct": false},
                    {"text": "list", "correct": true},
                    {"text": "int", "correct": false}
                ],
                "explanation": "A list is mutable, meaning its elements can be changed after creation, unlike strings, tuples, and integers."
            },
            {
                "id": 7,
                "text": "What does the 'len()' function do in Python?",
                "options": [
                    {"text": "Returns the type of an object", "correct": false},
                    {"text": "Returns the length of an object", "correct": true},
                    {"text": "Converts a value to a string", "correct": false},
                    {"text": "Checks if an object is empty", "correct": false}
                ],
                "explanation": "The 'len()' function returns the number of items in an object, such as a list, string, or tuple."
            },
            {
                "id": 8,
                "text": "What is the output of the following code? \nfor i in range(3): \n    print(i, end=' ')",
                "options": [
                    {"text": "0 1 2", "correct": true},
                    {"text": "1 2 3", "correct": false},
                    {"text": "0 1", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "The range(3) generates numbers from 0 to 2, and the print with end=' ' outputs them with spaces, resulting in '0 1 2'."
            },
            {
                "id": 9,
                "text": "Which operator is used for string concatenation in Python?",
                "options": [
                    {"text": "&", "correct": false},
                    {"text": "+", "correct": true},
                    {"text": "*", "correct": false},
                    {"text": "||", "correct": false}
                ],
                "explanation": "The '+' operator concatenates two strings in Python, e.g., 'hello' + 'world' yields 'helloworld'."
            },
            {
                "id": 10,
                "text": "What is the output of the following code? \ns = 'Python' \nprint(s[1:4])",
                "options": [
                    {"text": "yth", "correct": true},
                    {"text": "Pyt", "correct": false},
                    {"text": "ytho", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "String slicing s[1:4] extracts characters from index 1 to 3 (end index is exclusive), resulting in 'yth'."
            },
            {
                "id": 11,
                "text": "Which keyword is used to exit a loop in Python?",
                "options": [
                    {"text": "stop", "correct": false},
                    {"text": "break", "correct": true},
                    {"text": "exit", "correct": false},
                    {"text": "return", "correct": false}
                ],
                "explanation": "The 'break' keyword terminates the enclosing loop immediately."
            },
            {
                "id": 12,
                "text": "What is the output of the following code? \nx = 5 \nx += 2 \nprint(x)",
                "options": [
                    {"text": "5", "correct": false},
                    {"text": "7", "correct": true},
                    {"text": "2", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "The += operator adds 2 to x (5), so x becomes 7, which is printed."
            },
            {
                "id": 13,
                "text": "Which of the following is used to create a tuple in Python?",
                "options": [
                    {"text": "[]", "correct": false},
                    {"text": "{}", "correct": false},
                    {"text": "()", "correct": true},
                    {"text": "<>", "correct": false}
                ],
                "explanation": "Tuples are created using parentheses (), e.g., (1, 2, 3)."
            },
            {
                "id": 14,
                "text": "What is the output of the following code? \ndef square(num): \n    return num * num \nprint(square(4))",
                "options": [
                    {"text": "8", "correct": false},
                    {"text": "16", "correct": true},
                    {"text": "4", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "The square function returns 4 * 4, which is 16."
            },
            {
                "id": 15,
                "text": "Which module is used to generate random numbers in Python?",
                "options": [
                    {"text": "math", "correct": false},
                    {"text": "random", "correct": true},
                    {"text": "time", "correct": false},
                    {"text": "sys", "correct": false}
                ],
                "explanation": "The 'random' module provides functions like random.randint() to generate random numbers."
            },
            {
                "id": 16,
                "text": "What is the output of the following code? \nx = [1, 2, 3] \nx.append(4) \nprint(x)",
                "options": [
                    {"text": "[1, 2, 3, 4]", "correct": true},
                    {"text": "[1, 2, 3]", "correct": false},
                    {"text": "[4, 1, 2, 3]", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "The append() method adds 4 to the end of the list, resulting in [1, 2, 3, 4]."
            },
            {
                "id": 17,
                "text": "Which of the following creates a dictionary in Python?",
                "options": [
                    {"text": "[]", "correct": false},
                    {"text": "{}", "correct": true},
                    {"text": "()", "correct": false},
                    {"text": "<>", "correct": false}
                ],
                "explanation": "Dictionaries are created using curly braces {}, e.g., {'key': 'value'}."
            },
            {
                "id": 18,
                "text": "What is the output of the following code? \nd = {'a': 1, 'b': 2} \nprint(d['b'])",
                "options": [
                    {"text": "1", "correct": false},
                    {"text": "2", "correct": true},
                    {"text": "'b'", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "The dictionary d has a key 'b' mapped to the value 2, so d['b'] returns 2."
            },
            {
                "id": 19,
                "text": "Which keyword is used to handle exceptions in Python?",
                "options": [
                    {"text": "try", "correct": true},
                    {"text": "catch", "correct": false},
                    {"text": "throw", "correct": false},
                    {"text": "except", "correct": false}
                ],
                "explanation": "The 'try' keyword defines a block of code that may raise exceptions, followed by 'except' to handle them."
            },
            {
                "id": 20,
                "text": "What is the output of the following code? \ntry: \n    print(10 / 0) \nexcept ZeroDivisionError: \n    print('Error')",
                "options": [
                    {"text": "10", "correct": false},
                    {"text": "Error", "correct": true},
                    {"text": "0", "correct": false},
                    {"text": "None", "correct": false}
                ],
                "explanation": "Dividing by zero raises a ZeroDivisionError, which is caught by the except block, printing 'Error'."
            },
            {
                "id": 21,
                "text": "What does the 'in' operator do in Python?",
                "options": [
                    {"text": "Performs division", "correct": false},
                    {"text": "Checks membership", "correct": true},
                    {"text": "Assigns a value", "correct": false},
                    {"text": "Compares types", "correct": false}
                ],
                "explanation": "The 'in' operator checks if a value exists in a sequence, like a list or string."
            },
            {
                "id": 22,
                "text": "What is the output of the following code? \nx = 'hello' \nprint(x.upper())",
                "options": [
                    {"text": "HELLO", "correct": true},
                    {"text": "hello", "correct": false},
                    {"text": "Hello", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "The upper() method converts all characters in the string to uppercase, resulting in 'HELLO'."
            },
            {
                "id": 23,
                "text": "Which of the following is a valid way to create a set in Python?",
                "options": [
                    {"text": "{}", "correct": false},
                    {"text": "set()", "correct": true},
                    {"text": "[]", "correct": false},
                    {"text": "()", "correct": false}
                ],
                "explanation": "A set is created using set() or curly braces with elements, e.g., {1, 2}. Empty {} creates a dictionary."
            },
            {
                "id": 24,
                "text": "What is the output of the following code? \ns = {1, 2, 2, 3} \nprint(len(s))",
                "options": [
                    {"text": "3", "correct": true},
                    {"text": "4", "correct": false},
                    {"text": "2", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "Sets do not allow duplicates, so {1, 2, 2, 3} becomes {1, 2, 3}, with a length of 3."
            },
            {
                "id": 25,
                "text": "Which keyword defines a class in Python?",
                "options": [
                    {"text": "class", "correct": true},
                    {"text": "struct", "correct": false},
                    {"text": "object", "correct": false},
                    {"text": "type", "correct": false}
                ],
                "explanation": "The 'class' keyword is used to define a class in Python, followed by the class name."
            },
            {
                "id": 26,
                "text": "What is the output of the following code? \nclass MyClass: \n    x = 5 \nobj = MyClass() \nprint(obj.x)",
                "options": [
                    {"text": "5", "correct": true},
                    {"text": "None", "correct": false},
                    {"text": "MyClass", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "The class attribute x is accessed via the object obj, printing 5."
            },
            {
                "id": 27,
                "text": "Which method is automatically called when an object is created?",
                "options": [
                    {"text": "__init__", "correct": true},
                    {"text": "__str__", "correct": false},
                    {"text": "__call__", "correct": false},
                    {"text": "__del__", "correct": false}
                ],
                "explanation": "The '__init__' method is the constructor, called when an object is instantiated."
            },
            {
                "id": 28,
                "text": "What is the output of the following code? \nlambda x: x * 2 \nresult = (lambda x: x * 2)(3) \nprint(result)",
                "options": [
                    {"text": "6", "correct": true},
                    {"text": "3", "correct": false},
                    {"text": "2", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "The lambda function multiplies its input by 2. When called with 3, it returns 3 * 2 = 6."
            },
            {
                "id": 29,
                "text": "Which module provides mathematical functions like sqrt()?",
                "options": [
                    {"text": "random", "correct": false},
                    {"text": "math", "correct": true},
                    {"text": "time", "correct": false},
                    {"text": "sys", "correct": false}
                ],
                "explanation": "The 'math' module provides mathematical functions like sqrt(), ceil(), and floor()."
            },
            {
                "id": 30,
                "text": "What is the output of the following code? \nimport math \nprint(math.sqrt(16))",
                "options": [
                    {"text": "4.0", "correct": true},
                    {"text": "16", "correct": false},
                    {"text": "8", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "The math.sqrt() function returns the square root of 16, which is 4.0 (a float)."
            },
            {
                "id": 31,
                "text": "Which of the following is used to read a file in Python?",
                "options": [
                    {"text": "open()", "correct": true},
                    {"text": "read()", "correct": false},
                    {"text": "file()", "correct": false},
                    {"text": "load()", "correct": false}
                ],
                "explanation": "The 'open()' function is used to open a file, which can then be read using methods like read()."
            },
            {
                "id": 32,
                "text": "What is the output of the following code? \nwith open('file.txt', 'w') as f: \n    f.write('Hello') \nf = open('file.txt', 'r') \nprint(f.read())",
                "options": [
                    {"text": "Hello", "correct": true},
                    {"text": "None", "correct": false},
                    {"text": "file.txt", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "The code writes 'Hello' to 'file.txt' and then reads it, printing 'Hello'. (Assumes file.txt is writable.)"
            },
            {
                "id": 33,
                "text": "Which keyword is used to import a module in Python?",
                "options": [
                    {"text": "include", "correct": false},
                    {"text": "import", "correct": true},
                    {"text": "require", "correct": false},
                    {"text": "use", "correct": false}
                ],
                "explanation": "The 'import' keyword is used to bring a module into the current namespace."
            },
            {
                "id": 34,
                "text": "What is the output of the following code? \nx = None \nprint(x)",
                "options": [
                    {"text": "None", "correct": true},
                    {"text": "0", "correct": false},
                    {"text": "null", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "The variable x is assigned None, which is printed as 'None'."
            },
            {
                "id": 35,
                "text": "Which method removes the last element from a list?",
                "options": [
                    {"text": "remove()", "correct": false},
                    {"text": "pop()", "correct": true},
                    {"text": "delete()", "correct": false},
                    {"text": "clear()", "correct": false}
                ],
                "explanation": "The 'pop()' method removes and returns the last element of a list by default."
            },
            {
                "id": 36,
                "text": "What is the output of the following code? \nx = [1, 2, 3] \ny = x \ny[0] = 4 \nprint(x)",
                "options": [
                    {"text": "[4, 2, 3]", "correct": true},
                    {"text": "[1, 2, 3]", "correct": false},
                    {"text": "[4, 1, 2]", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "Lists are mutable, and y = x creates a reference to the same list. Modifying y[0] changes x, resulting in [4, 2, 3]."
            },
            {
                "id": 37,
                "text": "Which function converts a string to an integer in Python?",
                "options": [
                    {"text": "str()", "correct": false},
                    {"text": "int()", "correct": true},
                    {"text": "float()", "correct": false},
                    {"text": "bool()", "correct": false}
                ],
                "explanation": "The 'int()' function converts a string (e.g., '123') to an integer, if valid."
            },
            {
                "id": 38,
                "text": "What is the output of the following code? \nprint(type([]))",
                "options": [
                    {"text": "<class 'list'>", "correct": true},
                    {"text": "<class 'tuple'>", "correct": false},
                    {"text": "<class 'dict'>", "correct": false},
                    {"text": "<class 'set'>", "correct": false}
                ],
                "explanation": "The type() function returns the class of an empty list, which is <class 'list'>."
            },
            {
                "id": 39,
                "text": "Which of the following is a correct way to create a list comprehension?",
                "options": [
                    {"text": "[x * 2 for x in range(3)]", "correct": true},
                    {"text": "{x * 2 for x in range(3)}", "correct": false},
                    {"text": "(x * 2 for x in range(3))", "correct": false},
                    {"text": "<x * 2 for x in range(3)>", "correct": false}
                ],
                "explanation": "List comprehensions use square brackets, e.g., [x * 2 for x in range(3)] creates [0, 2, 4]."
            },
            {
                "id": 40,
                "text": "What is the output of the following code? \ndef add(a, b=2): \n    return a + b \nprint(add(3))",
                "options": [
                    {"text": "5", "correct": true},
                    {"text": "3", "correct": false},
                    {"text": "2", "correct": false},
                    {"text": "Error", "correct": false}
                ],
                "explanation": "The function add has a default parameter b=2. Calling add(3) uses a=3 and b=2, returning 3 + 2 = 5."
            }
        ]
    }
}