{
    "quiz": {
        "title": "JavaScript Programming Quiz",
        "questions": [
            {
                "id": 1,
                "text": "What is the output of this JavaScript code?\n```javascript\nconsole.log(3 + 5 * 2);\n```",
                "correct_answer": "13",
                "explanation": "Multiplication has higher precedence, so 5 * 2 = 10, then 3 + 10 = 13."
            },
            {
                "id": 2,
                "text": "Find the error in this JavaScript code:\n```javascript\nlet arr = [1, 2, 3];\narr[3] = 4;\n```",
                "correct_answer": "No error",
                "explanation": "The array is expanded, and arr[3] is set to 4; no error occurs."
            },
            {
                "id": 3,
                "text": "Complete this JavaScript code to print 'Even' if x is even:\n```javascript\nlet x = 4;\nif (x % 2 === 0) {\n    console.log('Even');\n}\n```",
                "correct_answer": "Even",
                "explanation": "x % 2 === 0 checks if x is even, so for x = 4, it logs 'Even'."
            },
            {
                "id": 4,
                "text": "What is the output of this JavaScript code?\n```javascript\nlet s = 'JavaScript';\nconsole.log(s.slice(1, 4));\n```",
                "correct_answer": "ava",
                "explanation": "slice(1, 4) extracts characters from index 1 to 3 (exclusive)."
            },
            {
                "id": 5,
                "text": "Find the error in this JavaScript code:\n```javascript\nlet x = 5;\nconsole.log(X);\n```",
                "correct_answer": "ReferenceError",
                "explanation": "JavaScript is case-sensitive; 'X' is undefined, only 'x' is defined."
            },
            {
                "id": 6,
                "text": "Complete this JavaScript code to return the square of a number:\n```javascript\nfunction square(num) {\n    return num * num;\n}\nconsole.log(square(4));\n```",
                "correct_answer": "16",
                "explanation": "The function returns 4 * 4 = 16."
            },
            {
                "id": 7,
                "text": "What is the output of this JavaScript code?\n```javascript\nlet arr = [1, 2, 3];\narr.push(4);\nconsole.log(arr);\n```",
                "correct_answer": "[1, 2, 3, 4]",
                "explanation": "push(4) adds 4 to the end of the array."
            },
            {
                "id": 8,
                "text": "Find the error in this JavaScript code:\n```javascript\nfor (let i = 0; i < 3; i++)\n    console.log(i);\n```",
                "correct_answer": "No error",
                "explanation": "While curly braces are recommended, a single statement after a for loop is valid."
            },
            {
                "id": 9,
                "text": "Complete this JavaScript code to concatenate strings:\n```javascript\nlet s1 = 'Hello';\nlet s2 = 'World';\nconsole.log(s1 + s2);\n```",
                "correct_answer": "HelloWorld",
                "explanation": "The '+' operator concatenates the strings."
            },
            {
                "id": 10,
                "text": "What is the output of this JavaScript code?\n```javascript\nlet x = 10;\nx += 3;\nconsole.log(x);\n```",
                "correct_answer": "13",
                "explanation": "x += 3 adds 3 to x, so 10 + 3 = 13."
            },
            {
                "id": 11,
                "text": "Find the error in this JavaScript code:\n```javascript\nlet s = null;\nconsole.log(s.length);\n```",
                "correct_answer": "TypeError",
                "explanation": "Accessing length on null causes a TypeError."
            },
            {
                "id": 12,
                "text": "Complete this JavaScript code to check if an array includes 5:\n```javascript\nlet nums = [1, 3, 5, 7];\nif (nums.includes(5)) {\n    console.log('Found');\n}\n```",
                "correct_answer": "Found",
                "explanation": "includes(5) returns true, so 'Found' is logged."
            },
            {
                "id": 13,
                "text": "What is the output of this JavaScript code?\n```javascript\ntry {\n    throw new Error('Oops');\n} catch (e) {\n    console.log(e.message);\n}\n```",
                "correct_answer": "Oops",
                "explanation": "The catch block logs the error message 'Oops'."
            },
            {
                "id": 14,
                "text": "Find the error in this JavaScript code:\n```javascript\nlet x = parseInt('abc');\nconsole.log(x);\n```",
                "correct_answer": "No error",
                "explanation": "parseInt('abc') returns NaN, which is a valid output, not an error."
            },
            {
                "id": 15,
                "text": "Complete this JavaScript code to find the maximum of two numbers:\n```javascript\nfunction max(a, b) {\n    return a > b ? a : b;\n}\nconsole.log(max(7, 3));\n```",
                "correct_answer": "7",
                "explanation": "The function returns 7 since 7 > 3."
            },
            {
                "id": 16,
                "text": "What is the output of this JavaScript code?\n```javascript\nlet arr = ['a', 'b', 'c'];\nconsole.log(arr[2]);\n```",
                "correct_answer": "c",
                "explanation": "arr[2] accesses the third element, 'c'."
            },
            {
                "id": 17,
                "text": "Find the error in this JavaScript code:\n```javascript\nconst x = 5;\nx = 10;\n```",
                "correct_answer": "TypeError",
                "explanation": "A const variable cannot be reassigned."
            },
            {
                "id": 18,
                "text": "Complete this JavaScript code to print numbers 0 to 2:\n```javascript\nfor (let i = 0; i < 3; i++) {\n    console.log(i);\n}\n```",
                "correct_answer": "0\n1\n2",
                "explanation": "The loop logs 0, 1, and 2 on separate lines."
            },
            {
                "id": 19,
                "text": "What is the output of this JavaScript code?\n```javascript\nlet x = true;\nconsole.log(!x);\n```",
                "correct_answer": "false",
                "explanation": "The ! operator negates true to false."
            },
            {
                "id": 20,
                "text": "Find the error in this JavaScript code:\n```javascript\nlet obj = {a: 1};\nconsole.log(obj.b);\n```",
                "correct_answer": "No error",
                "explanation": "Accessing a non-existent property returns undefined, not an error."
            },
            {
                "id": 21,
                "text": "Complete this JavaScript code to add a property to an object:\n```javascript\nlet obj = {};\nobj.name = 'Alice';\nconsole.log(obj.name);\n```",
                "correct_answer": "Alice",
                "explanation": "The name property is set to 'Alice' and logged."
            },
            {
                "id": 22,
                "text": "What is the output of this JavaScript code?\n```javascript\nlet s = 'hello';\nconsole.log(s.toUpperCase());\n```",
                "correct_answer": "HELLO",
                "explanation": "toUpperCase() converts the string to uppercase."
            },
            {
                "id": 23,
                "text": "Find the error in this JavaScript code:\n```javascript\nconsole.log(1 / 0);\n```",
                "correct_answer": "No error",
                "explanation": "Division by zero in JavaScript returns Infinity, not an error."
            },
            {
                "id": 24,
                "text": "Complete this JavaScript code to map an array to squares:\n```javascript\nlet arr = [1, 2, 3];\nconsole.log(arr.map(x => x * x));\n```",
                "correct_answer": "[1, 4, 9]",
                "explanation": "map() applies the square function to each element."
            },
            {
                "id": 25,
                "text": "What is the output of this JavaScript code?\n```javascript\nlet x = 5;\nconsole.log(x++);\n```",
                "correct_answer": "5",
                "explanation": "Post-increment (x++) returns x before incrementing, so 5 is logged."
            },
            {
                "id": 26,
                "text": "Find the error in this JavaScript code:\n```javascript\nlet s = '123';\nconsole.log(s + 4);\n```",
                "correct_answer": "No error",
                "explanation": "String concatenation results in '1234', not an error."
            },
            {
                "id": 27,
                "text": "Complete this JavaScript code to check if a string is empty:\n```javascript\nlet s = '';\nconsole.log(s.length === 0);\n```",
                "correct_answer": "true",
                "explanation": "An empty string has length 0, so the condition is true."
            },
            {
                "id": 28,
                "text": "What is the output of this JavaScript code?\n```javascript\nlet x = '5';\nconsole.log(Number(x) + 2);\n```",
                "correct_answer": "7",
                "explanation": "Number('5') converts the string to 5, then 5 + 2 = 7."
            },
            {
                "id": 29,
                "text": "Find the error in this JavaScript code:\n```javascript\nlet arr = [1, 2, 3];\nconsole.log(arr[3]);\n```",
                "correct_answer": "No error",
                "explanation": "Accessing an out-of-bounds index returns undefined, not an error."
            },
            {
                "id": 30,
                "text": "Complete this JavaScript code to sum an array:\n```javascript\nlet nums = [1, 2, 3, 4];\nconsole.log(nums.reduce((a, b) => a + b, 0));\n```",
                "correct_answer": "10",
                "explanation": "reduce() sums the array elements: 1 + 2 + 3 + 4 = 10."
            },
            {
                "id": 31,
                "text": "What is the output of this JavaScript code?\n```javascript\nlet obj = {a: 1, b: 2};\nconsole.log(Object.keys(obj));\n```",
                "correct_answer": "['a', 'b']",
                "explanation": "Object.keys() returns an array of the object's property names."
            },
            {
                "id": 32,
                "text": "Find the error in this JavaScript code:\n```javascript\nfunction test() {\n    console.log(x);\n    let x = 5;\n}\ntest();\n```",
                "correct_answer": "ReferenceError",
                "explanation": "Accessing x before its declaration in a let scope causes a ReferenceError."
            },
            {
                "id": 33,
                "text": "Complete this JavaScript code to create an arrow function:\n```javascript\nconst double = x => x * 2;\nconsole.log(double(3));\n```",
                "correct_answer": "6",
                "explanation": "The arrow function doubles the input, so 3 * 2 = 6."
            },
            {
                "id": 34,
                "text": "What is the output of this JavaScript code?\n```javascript\nlet x = 5;\nconsole.log(typeof x);\n```",
                "correct_answer": "number",
                "explanation": "typeof 5 returns 'number'."
            },
            {
                "id": 35,
                "text": "Find the error in this JavaScript code:\n```javascript\nlet x = undefined;\nconsole.log(x.length);\n```",
                "correct_answer": "TypeError",
                "explanation": "Accessing length on undefined causes a TypeError."
            },
            {
                "id": 36,
                "text": "Complete this JavaScript code to filter even numbers:\n```javascript\nlet nums = [1, 2, 3, 4];\nconsole.log(nums.filter(x => x % 2 === 0));\n```",
                "correct_answer": "[2, 4]",
                "explanation": "filter() returns elements where x % 2 === 0 is true."
            },
            {
                "id": 37,
                "text": "What is the output of this JavaScript code?\n```javascript\nlet x = [1, 2, 3];\nconsole.log(x.join('-'));\n```",
                "correct_answer": "1-2-3",
                "explanation": "join('-') concatenates array elements with a '-' separator."
            },
            {
                "id": 38,
                "text": "Find the error in this JavaScript code:\n```javascript\nlet x = 5;\nconsole.log(x.toString);\n```",
                "correct_answer": "No error",
                "explanation": "Logging x.toString outputs the function reference, not an error."
            },
            {
                "id": 39,
                "text": "Complete this JavaScript code to create a class:\n```javascript\nclass Person {\n    constructor(name) {\n        this.name = name;\n    }\n}\nlet p = new Person('Bob');\nconsole.log(p.name);\n```",
                "correct_answer": "Bob",
                "explanation": "The constructor sets the name property to 'Bob'."
            },
            {
                "id": 40,
                "text": "What is the output of this JavaScript code?\n```javascript\nlet x = 5;\nconsole.log(x === '5');\n```",
                "correct_answer": "false",
                "explanation": "Strict equality (===) checks type and value, so 5 (number) is not equal to '5' (string)."
            }
        ]
    }
}